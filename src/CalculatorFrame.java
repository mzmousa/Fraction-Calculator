/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor. Whole number back to fraction still goes to /1.
extremely small numbers and extremely big numbers do e-10 stuff which messes up in calculations.
 *
 */

/**
 *
 * @author mousmuha930
 */
public class CalculatorFrame extends javax.swing.JFrame {
    String calculation = "";
    Fraction f1 = new Fraction();
    Fraction f2 = new Fraction();
    Fraction result = new Fraction();
    
    /**
     * Creates new form CalculatorFrame
     */
    public CalculatorFrame() {
        initComponents();
        String [] operations = {"Add", "Multiply", "Subtract", "Divide"};
        calculationsList.setListData(operations);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        calculatorName2 = new javax.swing.JLabel();
        operand1Label1 = new javax.swing.JLabel();
        operand2Label1 = new javax.swing.JLabel();
        operand1Field = new javax.swing.JTextField();
        operand2Field = new javax.swing.JTextField();
        fractionButton = new javax.swing.JButton();
        resultLabel = new javax.swing.JLabel();
        convertToLabel = new javax.swing.JLabel();
        answerField = new javax.swing.JTextField();
        decimalButton = new javax.swing.JButton();
        operand1Label2 = new javax.swing.JLabel();
        operand1Label3 = new javax.swing.JLabel();
        calculateButton = new javax.swing.JButton();
        calculationsList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        calculatorName2.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        calculatorName2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        calculatorName2.setText("Fraction Calculator");

        operand1Label1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        operand1Label1.setText("Fraction #1:");

        operand2Label1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        operand2Label1.setText("Fraction #2:");

        operand1Field.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        operand1Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operand1FieldActionPerformed(evt);
            }
        });

        operand2Field.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        operand2Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operand2FieldActionPerformed(evt);
            }
        });

        fractionButton.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        fractionButton.setText("Fraction");
        fractionButton.setDoubleBuffered(true);
        fractionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fractionButtonActionPerformed(evt);
            }
        });

        resultLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        resultLabel.setText("Result:");

        convertToLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        convertToLabel.setText("Convert Result to:");

        answerField.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        answerField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerFieldActionPerformed(evt);
            }
        });

        decimalButton.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        decimalButton.setText("Decimal");
        decimalButton.setDoubleBuffered(true);
        decimalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalButtonActionPerformed(evt);
            }
        });

        operand1Label2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        operand1Label2.setText("(e.g. 1/2, 2 3/4)");

        calculateButton.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        calculateButton.setText("Calculate");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        calculationsList.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        calculationsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Add", "Subtract", "Multiply", "Divide" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        calculationsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                calculationsListValueChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(operand1Label1)
                            .addComponent(operand2Label1)
                            .addComponent(operand1Label2)
                            .addComponent(operand1Label3))
                        .addGap(10, 10, 10)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(calculatorName2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(operand1Field, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(operand2Field)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(convertToLabel)
                            .addComponent(resultLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(answerField)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(decimalButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fractionButton)))))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(calculationsList, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(calculateButton)))
                .addContainerGap())
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(calculatorName2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(operand1Label1)
                                    .addComponent(operand1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(53, 53, 53)
                                .addComponent(operand1Label3))
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(operand1Label2)
                                .addGap(18, 18, 18)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(operand2Label1)
                                    .addComponent(operand2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(decimalButton)
                            .addComponent(fractionButton)
                            .addComponent(convertToLabel))
                        .addGap(20, 20, 20)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resultLabel)
                            .addComponent(answerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(calculationsList, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(calculateButton)))
                .addGap(38, 38, 38))
        );

        calculationsList.getAccessibleContext().setAccessibleParent(jPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void operand1FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operand1FieldActionPerformed
        // Upper text field
    }//GEN-LAST:event_operand1FieldActionPerformed

    private void operand2FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operand2FieldActionPerformed
        // Lower text field
    }//GEN-LAST:event_operand2FieldActionPerformed

    private void fractionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fractionButtonActionPerformed
        String decimalValue = answerField.getText();
        int decimalPlaces = decimalValue.length() - 1 - decimalValue.indexOf(".");
        if (decimalPlaces > 8) {
            StringBuilder sb = new StringBuilder(decimalValue);
            for (int i = decimalPlaces; i < 9; i--) {
                sb.deleteCharAt(i);
            }
            decimalValue = sb.toString();
            decimalPlaces = 8;
        }
        if (decimalPlaces == 0) {
            decimalValue += ".0";
        }
        double decimalValueAsDouble = Double.parseDouble(decimalValue);
        double multiplier = (int) Math.pow(10, decimalPlaces);
        int decimalValueAsInt = (int)(decimalValueAsDouble*multiplier);
        Fraction decimalToFraction = new Fraction (decimalValueAsInt, (int)multiplier);
        decimalToFraction.reduce();
        if (decimalToFraction.getDen() == 1) {
            if (decimalToFraction.getNum()/decimalToFraction.getDen() >= 1 || decimalToFraction.getNum()/decimalToFraction.getDen() <= -1) {
                answerField.setText(Integer.toString(MixedFraction.toMixed(decimalToFraction).getWhole()));
            }
            else {
                 answerField.setText(Integer.toString(decimalToFraction.getNum()));
            }
        }
        else if (decimalToFraction.getDen() == 0) {
             answerField.setText("Cannot divide by zero");
        }
        else {
            if (decimalToFraction.getNum()/decimalToFraction.getDen() >= 1 || decimalToFraction.getNum()/decimalToFraction.getDen() <= -1) {
                 answerField.setText(MixedFraction.toMixed(decimalToFraction).getFraction());
            }
            else {
                 answerField.setText(decimalToFraction.getFraction());
            }
        }
    }//GEN-LAST:event_fractionButtonActionPerformed

    private void answerFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerFieldActionPerformed
    }//GEN-LAST:event_answerFieldActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        String operand1 = operand1Field.getText();
        String operand2 = operand2Field.getText();
        String [] strArray1 = operand1.split(" ");
        String [] strArray2 = operand2.split(" ");
        if (operand1Field.getText().contains("/0") || operand2Field.getText().contains("/0")) {
            answerField.setText("Cannot divide by zero.");
        }
        else if (operand1.contains(" ")) {
            int whole1 = Integer.parseInt(strArray1[0]);
            String [] strArray1NumDen = strArray1[1].split("/");
            int num1 = Integer.parseInt(strArray1NumDen[0]);
            int den1 = Integer.parseInt(strArray1NumDen[1]);
            MixedFraction mf1 = new MixedFraction (whole1, num1, den1);
            f1 = mf1.toEntire();
        }
        else if (operand1.contains("/")) {
            String [] strArray1NumDen = strArray1[0].split("/");
            int num1 = Integer.parseInt(strArray1NumDen[0]);
            int den1 = Integer.parseInt(strArray1NumDen[1]);
            f1.setFraction(num1, den1);
        }
        if (operand2.contains(" ")) {
            int whole2 = Integer.parseInt(strArray2[0]);
            String [] strArray2NumDen = strArray2[1].split("/");
            int num2 = Integer.parseInt(strArray2NumDen[0]);
            int den2 = Integer.parseInt(strArray2NumDen[1]);
            MixedFraction mf2 = new MixedFraction (whole2, num2, den2);
            f2 = mf2.toEntire();
        }
        else if (operand2.contains("/")){
            String [] strArray2NumDen = strArray2[0].split("/");
            int num2 = Integer.parseInt(strArray2NumDen[0]);
            int den2 = Integer.parseInt(strArray2NumDen[1]);
            f2.setFraction(num2, den2);
        }
        if (calculation.equals("Add")) {
            result = Fraction.add(f1, f2);
        }
        if (calculation.equals("Multiply")) {
            result = Fraction.multiply(f1, f2);
        }
        if (calculation.equals("Subtract")) {
            result = Fraction.subtract(f1, f2);
        }
        if (calculation.equals("Divide")) {
            result = Fraction.divide(f1, f2);  
        }
        if (calculation.equals("")) {
            answerField.setText("Click an operation to select it.");
        }
        else {
            if (result.getDen() == 0) {
                answerField.setText("Cannot divide by zero");
            }
            else if (result.getDen() == 1) {
                if (result.getNum()/result.getDen() >= 1 || result.getNum()/result.getDen() <= -1) {
                    answerField.setText(Integer.toString(MixedFraction.toMixed(result).getWhole()));
                }
                else {
                    answerField.setText(Integer.toString(result.getNum()));
                }
            }
            else {
                if (result.getNum()/result.getDen() >= 1 || result.getNum()/result.getDen() <= -1) {
                    answerField.setText(MixedFraction.toMixed(result).getFraction());
                }
                else {
                    answerField.setText(result.getFraction());
                }
            }
        }
    }//GEN-LAST:event_calculateButtonActionPerformed

    private void calculationsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_calculationsListValueChanged
        calculationsList.addListSelectionListener(null);
        int x = calculationsList.getSelectedIndex();
        if (x==0) {
            calculation = "Add";
        }
        if (x==1) {
            calculation = "Multiply";
        }
        if (x==2) {
            calculation = "Subtract";
        }
        if (x==3) {
            calculation = "Divide";
        }
    }//GEN-LAST:event_calculationsListValueChanged

    private void decimalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalButtonActionPerformed
        if (!answerField.getText().contains(".")) {
            String operandAns = answerField.getText();
            String [] strArrayAns = operandAns.split(" ");
            Fraction fAns = new Fraction();
            if (operandAns.contains(" ")) {
                int wholeAns = Integer.parseInt(strArrayAns[0]);
                String [] strArrayAnsNumDen = strArrayAns[1].split("/");
                int numAns = Integer.parseInt(strArrayAnsNumDen[0]);
                int denAns = Integer.parseInt(strArrayAnsNumDen[1]);
                MixedFraction mfAns = new MixedFraction (wholeAns, numAns, denAns);
                fAns = mfAns.toEntire();
            }
            else if (operandAns.contains("/")) {
                String [] strArrayAnsNumDen = strArrayAns[0].split("/");
                int num1 = Integer.parseInt(strArrayAnsNumDen[0]);
                int den1 = Integer.parseInt(strArrayAnsNumDen[1]);
                fAns.setFraction(num1, den1);
            }
            else {
                operandAns = operandAns+"/1";
                String [] strArrayAnsNumDen = strArrayAns[0].split("/");
                int num1 = Integer.parseInt(strArrayAnsNumDen[0]);
                int den1 = Integer.parseInt(strArrayAnsNumDen[1]);
                fAns.setFraction(num1, den1);
            }
            String resultDecimal = Double.toString((double)fAns.getNum()/(double)fAns.getDen());
            answerField.setText(resultDecimal);
        }
            
    }//GEN-LAST:event_decimalButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculatorFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField answerField;
    private javax.swing.JButton calculateButton;
    private javax.swing.JList calculationsList;
    private javax.swing.JLabel calculatorName2;
    private javax.swing.JLabel convertToLabel;
    private javax.swing.JButton decimalButton;
    private javax.swing.JButton fractionButton;
    private javax.swing.JPanel jPanel;
    private javax.swing.JTextField operand1Field;
    private javax.swing.JLabel operand1Label1;
    private javax.swing.JLabel operand1Label2;
    private javax.swing.JLabel operand1Label3;
    private javax.swing.JTextField operand2Field;
    private javax.swing.JLabel operand2Label1;
    private javax.swing.JLabel resultLabel;
    // End of variables declaration//GEN-END:variables
}
